---
-
  gather_facts: false
  hosts: myhost
  tasks:
    -
      ec2:
        count_tag:
          Name: Demo
        exact_count: 1
        group: "sg-0ee2695de89fda376"
        image: "ami-0e65ed16c9bf1abc7"
        instance_tags:
          Name: Everbridge
        instance_type: t2.micro
        key_name: my-key
        region: us-west-1
        aws_access_key: "AKIA2B4AY4FWRTMAHJDW"
        aws_secret_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65343933333036613739366236646337396632366362376637663437333162666433376336366637
          6666343565616136656239303661323931616133663039620a356130306237383136633336323366
          36363538623965356362616536323232343962313034643463663965383937386262646430636535
          3733303135313630330a663836646565646531376537366664633130383264613330653734343039
          64333437323866306632396365623561376534666130363664623462653139376134373066303562
          3237633837303939383064383530343336666132323835616466

        wait: true
      name: "Provision an instance"
      register: ec2

- name: spin up the load balancer
  hosts: 127.0.0.1
  connection: local
  gather_facts: False
  tasks:
    - name: setup a simple load balancer
      ec2_elb_lb:
        name: aws-elb-demo
        state: present
        region: us-west-1
        zones:
          - us-west-2
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: aws-elb-demo

    - name: add the webservers to the load balancer
      local_action: ec2_elb
      args:
        instance_id: "{{ item.id }}"
        ec2_elbs: aws-elb-demo
        state: present
        region: us-west-1
      with_items: ec2.tagged_instances

